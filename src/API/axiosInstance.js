// üìÅ API/axiosInstance.js
import axios from "axios";

const apiUrl = process.env.REACT_APP_API_URL;
const apiKey = process.env.REACT_APP_API_KEY;
const apiSecret = process.env.REACT_APP_SECRET;

const API = axios.create({
  baseURL: apiUrl,
  withCredentials: true, // ‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ó‡∏µ‡πà
  headers: {
    "Content-Type": "application/json",
    "X-API-Key": apiKey,
    "X-Secret": apiSecret,
  },
});

// ‚úÖ Interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ô‡∏ö token ‡∏ó‡∏∏‡∏Å request
API.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// ‚úÖ Interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
API.interceptors.response.use(
  (response) => response,
  (error) => {
    const msg = error.response?.data?.message;

    if (msg === "Token expired" || msg === "Invalid token") {
      localStorage.removeItem("token");
      localStorage.removeItem("payload");

      // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô redirect (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
      alert("Session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");

      // ‚úÖ Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
      window.location.href = "/login";
    }

    return Promise.reject(error);
  }
);


export default API;

import { useMediaQuery } from "@mui/material";
import StatusSelectCell from "../DataTable/TblOperation/StatusSelectCell";
import StatusThreeSelectCell from "../DataTable/TblOperation/StatusThreeSelectCell";
import StatusTwoSelectCell from "../DataTable/TblOperation/StatusTwoSelectCell";
import React, { useState, useEffect } from "react";
import EventService from "../../services/EventService"; // üëà ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
import { TextField, Box, CircularProgress } from "@mui/material";
import Swal from "sweetalert2";
const Expanded = ({ data, onStatusUpdate, onDocNoUpdate }) => {
  const isMobile = useMediaQuery("(max-width:600px)");

  const [docNo, setDocNo] = useState(data.docNo || "");
  const [loading, setLoading] = useState(false);
  const [initialDocNo, setInitialDocNo] = useState(data.docNo || "");
  const [saving, setSaving] = useState(false);

  useEffect(() => {
    setDocNo(data.docNo || "");
    setInitialDocNo(data.docNo || "");
  }, [data]);

  const handleAutoUpdate = async () => {
    if (docNo === initialDocNo) return;

    try {
      setLoading(true);

      const updated = await EventService.UpdateEvent(data._id, {
        ...data,
        docNo,
      });

      setInitialDocNo(docNo);

      // üü¢ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢
      if (onStatusUpdate) {
        onStatusUpdate(data._id, docNo); // üëâ ‡∏™‡πà‡∏á id ‡πÅ‡∏•‡∏∞ docNo ‡πÉ‡∏´‡∏°‡πà
      }

      Swal.fire({
        toast: true,
        position: "top-end",
        icon: "success",
        title: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
        showConfirmButton: false,
        timer: 1200,
      });
    } catch (err) {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏î‡πâ", "error");
    } finally {
      setLoading(false);
    }
  };

  if (!data) return <div>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>;

  return (
    <div className="card mb-3">
      <div className="row g-0">
        <div className="col-md-12">
          <div className="card-body text">
            <Box
              sx={{
                display: "flex",
                alignItems: "center",
                gap: 1,
                flexWrap: "wrap", // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å
                mb: 1,
              }}
            >
              {" "}
              <TextField
                label="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (docNo)"
                value={docNo}
                onChange={(e) => setDocNo(e.target.value)}
                onBlur={handleAutoUpdate} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                size="small"
                fullWidth
                sx={{ maxWidth: 350, mb: 1 }}
              />
              {loading && <CircularProgress size={20} />}
            </Box>
            <h5 className="card-title mt-4">
              ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà : {docNo || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
            </h5>

            <p></p>

            <p className="card-text">
              ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó / ‡∏ô‡∏¥‡∏ï‡∏¥‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• : {data.company || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
            </p>
            <p></p>
            <p className="card-text">
              ‡∏á‡∏≤‡∏ô / ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ : [{data.title}] {data.system} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà{" "}
              {data.time || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} - {data.site}
            </p>

            {/* ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö layout ‡∏û‡∏£‡πâ‡∏≠‡∏° label */}

            {isMobile && (
              <div
                style={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "12px",
                  marginBottom: "1rem",
                  width: "80%",
                  maxWidth: "400px", // ‚úÖ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
                }}
              >
                {/* <div
                  style={{
                    display: "flex",
                    flexDirection: "column",
                    gap: "4px",
                  }}
                >
                  <label>‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ : </label>
                  <StatusSelectCell
                    row={data}
                    onStatusUpdate={onStatusUpdate}
                  />
                </div>

                <div
                  style={{
                    display: "flex",
                    flexDirection: "column",
                    gap: "4px",
                  }}
                >
                  <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 1 : </label>
                  <StatusTwoSelectCell
                    row={data}
                    onStatusUpdate={onStatusUpdate}
                  />
                </div>

                <div
                  style={{
                    display: "flex",
                    flexDirection: "column",
                    gap: "4px",
                  }}
                >
                  <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 2 : </label>
                  <StatusThreeSelectCell
                    row={data}
                    onStatusUpdate={onStatusUpdate}
                  />
                </div> */}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Expanded;

import React, { useState, useEffect, useRef } from "react";
import ReactDOM from "react-dom/client";

import FullCalendar from "@fullcalendar/react";
import dayGridPlugin from "@fullcalendar/daygrid";
import timeGridPlugin from "@fullcalendar/timegrid"; // for dayClick
import momentTimezonePlugin from "@fullcalendar/moment-timezone";

import interactionPlugin, { Draggable } from "@fullcalendar/interaction"; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Draggable

import listPlugin from "@fullcalendar/list";

import Swal from "sweetalert2";

import { FontAwesomeIcon } from "@fortawesome/react-fontawesome"; // Import FontAwesomeIcon component

import {
  faBell,
  faClockFour,
  faClockRotateLeft,
  faFileExcel,
  faFilePdf,
  faPlus,
  faHourglassHalf,
  faCheckCircle,
  faCheck,
  faClock,
  faSpinner,
  faCheckDouble,
  faTimesCircle,
  faFileSignature,
  faFileInvoiceDollar,
  faCoins,
} from "@fortawesome/free-solid-svg-icons"; // Import ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ

import CustomerService from "../../services/CustomerService";
import EventService from "../../services/EventService";

import AuthService from "../../services/authService";

import moment from "moment";

import { ThreeDots } from "react-loader-spinner";

import generatePDF, { Resolution, Margin } from "react-to-pdf";

import { Col, Row } from "reactstrap";

import { CSVLink } from "react-csv";

import "./index.css";

import API from "../../API/axiosInstance";

import thLocale from "@fullcalendar/core/locales/th"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ locale ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢

import { useAuth } from "../../auth/AuthContext"; // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Auth

import { jsPDF } from "jspdf";

import thSarabunFont from "../../Fonts/THSarabunNew_base64"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ base64 font

import TomSelect from "tom-select";
import "tom-select/dist/css/tom-select.css";

import Hammer from "hammerjs";

import { getAddEvent } from "./EventForms/AddEvent";
import { getEditEvent } from "./EventForms/EditEvent";
import { getSaveEventToDB } from "./EventForms/SaveEvent";
import { getEventDrop } from "./EventForms/EventDrop";
import { getEventResize } from "./EventForms/EventResize";
import { getFetchEvents } from "./EventForms/FetchEvents";

function EventCalendar() {
  const { userData } = useAuth(); // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å user ‚Üí userData
  const isAdmin = userData?.role?.toLowerCase() === "admin"; // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö case-insensitive

  const [events, setEvents] = useState([]);

  const [eventReceive, setEventReceive] = useState([]);
  const [defaultTextColor, setDefaultTextColor] = useState("#FFFFFF"); // ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const [defaultBackgroundColor, setDefaultBackgroundColor] =
    useState("#FF5733"); // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

  const [defaultFontSize, setDefaultFontSize] = useState(8); //

  const [loading, setLoading] = useState(false); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î

  const [searchTerm, setSearchTerm] = useState(""); // üîç State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

  useEffect(() => {
    fetchEventsFromDB();
    initExternalEvents(); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏á component
  }, []);

  useEffect(() => {
    const today = moment().format("YYYY-MM-DD");
    let hasUpdated = false;

    const updatedEvents = events.map((event) => {
      const eventStartDate = moment(event.start).format("YYYY-MM-DD");
      // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡∏´‡∏≤‡∏Å event ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞
      // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠ (manualStatus ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô true)
      // ‡πÅ‡∏•‡∏∞ status ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
      if (
        eventStartDate === today &&
        !event.manualStatus && // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ event.manualStatus ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ
        event.extendedProps?.status !== "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
      ) {
        hasUpdated = true;
        return {
          ...event,
          extendedProps: {
            ...event.extendedProps,
            status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
          },
          manualStatus: false, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        };
      }
      return event;
    });

    if (hasUpdated) {
      setEvents(updatedEvents);
      updatedEvents.forEach(async (event) => {
        if (
          moment(event.start).format("YYYY-MM-DD") === today &&
          !event.manualStatus &&
          event.extendedProps?.status === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
        ) {
          try {
            await EventService.UpdateEvent(event.id, {
              status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
              manualStatus: false,
            });
            console.log(
              `‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Event ID ${event.id} ‡πÄ‡∏õ‡πá‡∏ô "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"`
            );
          } catch (error) {
            console.error(
              `‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Event ID ${event.id} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error}`
            );
          }
        }
      });
    }
  }, [events]);

  useEffect(() => {
    const calendarEl = document.querySelector(".fc-view-harness");
    if (!calendarEl) return;

    const hammer = new Hammer(calendarEl);

    hammer.on("swipeleft", () => {
      calendarRef.current?.getApi().next();
    });

    hammer.on("swiperight", () => {
      calendarRef.current?.getApi().prev();
    });

    return () => hammer.destroy();
  }, []);

  const generateWorkPermitPDF = (event) => {
    const doc = new jsPDF({
      orientation: "portrait",
      unit: "mm",
      format: "A4",
    });

    const timeText = event.extendedProps.time
      ? `‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${event.extendedProps.time} `
      : ""; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ time ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢

    // üëâ ‡∏ü‡∏≠‡∏ô‡∏ï‡πå THSarabun
    doc.addFileToVFS("THSarabun.ttf", thSarabunFont);
    doc.addFont("THSarabun.ttf", "THSarabun", "normal");
    doc.setFont("THSarabun");
    doc.setFontSize(16);

    // üëâ ‡πÉ‡∏™‡πà‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó (‡∏£‡∏∞‡∏ö‡∏∏ base64 ‡∏´‡∏£‡∏∑‡∏≠ path)
    const logo = "001.png"; // üëà ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
    doc.addImage(logo, "PNG", 15, 10, 30, 30); // x, y, width, height

    // üëâ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏±‡∏ß‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢
    doc.setFontSize(20);
    doc.text("‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏î‡∏π ‡∏≠‡∏≠‡∏• ‡∏≠‡∏≤‡∏£‡πå‡∏Ñ‡∏¥‡πÄ‡∏ó‡∏Ñ ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏≠‡πá‡∏ô‡∏à‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏£‡∏¥‡πà‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î", 105, 20, {
      align: "center",
    });

    doc.setFontSize(14);
    doc.text("DO ALL ARCHITECT AND ENGINEERING CO.,LTD.", 105, 28, {
      align: "center",
    });

    doc.setFontSize(12);
    doc.text(
      "68/155 ‡∏´‡∏°‡∏π‡πà 3 ‡∏ñ‡∏ô‡∏ô‡∏ä‡∏±‡∏¢‡∏û‡∏§‡∏Å‡∏©‡πå ‡∏ï‡∏≥‡∏ö‡∏•‡∏Ñ‡∏•‡∏≠‡∏á‡∏û‡∏£‡∏∞‡∏≠‡∏∏‡∏î‡∏° ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏õ‡∏≤‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏î ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ 11120",
      105,
      34,
      {
        align: "center",
      }
    );

    doc.text("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: " + moment().format("DD-MM-YYYY"), 170, 44, {
      align: "right",
    });

    doc.line(15, 48, 195, 48); // ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô

    // üëâ ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
    doc.setFontSize(16);
    doc.text(
      `‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ${event.title} ‡∏£‡∏∞‡∏ö‡∏ö ${event.extendedProps.system} ${timeText}`,
      105,
      58,
      {
        align: "center",
      }
    );

    // üëâ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Event
    const end_o = moment(event.end).format("DD-MM-YYYY");
    const start = moment(event.start).format("DD-MM-YYYY");
    const end = moment(event.end).format("DD-MM-YYYY");

    const lines = [
      "",
      `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô  ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ${event.extendedProps.site}`,
      "",
      `        ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏î‡∏π ‡∏≠‡∏≠‡∏• ‡∏≠‡∏≤‡∏Ñ‡∏¥‡πÄ‡∏ó‡∏Ñ ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏≠‡πá‡∏ô‡∏à‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏£‡∏¥‡πà‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡∏à‡∏≤‡∏Å ${event.extendedProps.company} `,
      `‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ${event.title} ‡∏£‡∏∞‡∏ö‡∏ö ${event.extendedProps.system} ${timeText} ‡∏ì ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ${event.extendedProps.site}`,
      "",

      `        ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏î‡∏π ‡∏≠‡∏≠‡∏• ‡∏≠‡∏≤‡∏Ñ‡∏¥‡πÄ‡∏ó‡∏Ñ ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏≠‡πá‡∏ô‡∏à‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏£‡∏¥‡πà‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ó‡πà‡∏≤‡∏ô‡∏ó‡∏£‡∏≤‡∏ö‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤ ${event.title} ‡∏£‡∏∞‡∏ö‡∏ö ${event.extendedProps.system}`,
      `‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${event.extendedProps.time} ‡∏ã‡∏∂‡πà‡∏á‡∏ó‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ø ‡∏°‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ`,

      "",

      `        Description`,

      "",

      "        ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏Ø ‡πÉ‡∏Ñ‡∏£‡πà‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠ ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏≤‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö",
      "‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏°‡∏µ‡∏°‡∏≤‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡∏´‡∏≤‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà",
      "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏î‡∏π ‡∏≠‡∏≠‡∏• ‡∏≠‡∏≤‡∏Ñ‡∏¥‡πÄ‡∏ó‡∏Ñ ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏≠‡πá‡∏ô‡∏à‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏£‡∏¥‡πà‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏î‡πâ‡∏ß‡∏¢ ‡∏à‡∏±‡∏Å‡∏Ç‡∏≠‡∏ö‡∏û‡∏£‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏¥‡πà‡∏á ",
    ];

    doc.setFontSize(14);
    let y = 68;
    lines.forEach((line) => {
      doc.text(line, 20, y);
      y += 8;
    });

    // üëâ ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const signature = "001.png"; // üëà ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    doc.addImage(signature, "PNG", 140, y + 10, 40, 20); // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

    doc.text("‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏∑‡∏≠", 150, y + 35);
    // doc.text("‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏£‡∏∞‡∏ö‡∏ö", 140, y + 45);
    // doc.text("064-111-0988", 140, y + 52);

    // üëâ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å PDF
    doc.save(`WorkPermit_${event.title}.pdf`);
  };

  const getStatusIcon = (status) => {
    switch (status) {
      // case "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å":
      //   return faTimesCircle; // ‚ùå
      case "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô":
        return faHourglassHalf; // ‚è≥
      case "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß":
        return faCheck; // ‚úîÔ∏è
      case "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£":
        return faClockRotateLeft; // üïí
      // case "‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß":
      //   return faFileSignature; // üìù
      // case "‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô":
      //   return faFileInvoiceDollar; // üìÑüí∏
      case "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô":
        return faCheckDouble; // üí∞
      default:
        return null;
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ External Events ‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≤‡∏Å‡πÑ‡∏î‡πâ
  const initExternalEvents = () => {
    let containerEl = document.getElementById("external-events");
    if (containerEl) {
      new Draggable(containerEl, {
        itemSelector: ".fc-event",
        eventData: (eventEl) => {
          return {
            title: eventEl.innerText.trim(), // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á event
          };
        },
      });
    }
  };

  const fetchThaiHolidaysFromAPI = async () => {
    try {
      const response = await API.get(`/holidays`);
      // console.log("API Response:", response.data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á API response

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response.data ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (response.data) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á response.data
        // console.log("Complete Data Structure:", JSON.stringify(response.data, null, 2));  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        if (response.data && Array.isArray(response.data)) {
          // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô response.data ‡πÄ‡∏õ‡πá‡∏ô Array
          const holidays = response.data.map((holiday) => ({
            title: holiday.HolidayDescriptionThai,
            start: holiday.Date, //
            color: "#FF0000", // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ
          }));

          // console.log("Mapped Holidays for Calendar:", holidays);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å map
          return holidays;
        } else {
          console.error(
            "Invalid structure, 'result.data' missing or incorrect."
          );
          return [];
        }
      } else {
        console.error("No data found in API response.");
        return [];
      }
    } catch (error) {
      console.error("Error fetching holidays from API:", error.message);
      return [];
    }
  };

  const fetchEventsFromDB = async () => {
    await getFetchEvents({
      defaultFontSize,
      setEvents,
      setLoading,
      EventService,
      fetchThaiHolidaysFromAPI,
    });
  };

  const saveEventToDB = async (newEvent) => {
    await getSaveEventToDB({ newEvent });
  };

  const handleAddEvent = async (arg) => {
    await getAddEvent({
      arg,
      events,
      setEvents,
      defaultTextColor,
      defaultBackgroundColor,
      setDefaultTextColor,
      setDefaultBackgroundColor,
      setDefaultFontSize,
      saveEventToDB,
      fetchEventsFromDB,

      CustomerService,
      AuthService,
      Swal,
      TomSelect,
      moment,
    });
  };

  const handleEditEvent = async (eventInfo) => {
    await getEditEvent({
      setEvents,
      fetchEventsFromDB,
      eventInfo,
      setLoading,
      generateWorkPermitPDF,
      handleDeleteEvent,
      EventService,
      CustomerService,
      AuthService,
      Swal,
      TomSelect,
      moment,
    });
  };

  const handleDeleteEvent = (id) => {
    try {
      Swal.fire({
        title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
        text: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô",
        cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      }).then(async (result) => {
        if (result.isConfirmed) {
          setLoading(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

          try {
            // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
            await EventService.DeleteEvent(id);

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÇ‡∏î‡∏¢‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô
            setEvents((prevEvents) =>
              prevEvents.filter((event) => event._id !== id)
            );

            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            await fetchEventsFromDB();

            setLoading(false);

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            Swal.fire({
              title: "‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
              text: "‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
              icon: "success",
              showConfirmButton: false,
              timer: 1500,
            });
          } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô:", error);
            Swal.fire({
              title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
              text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
              icon: "error",
            });
          } finally {
            setLoading(false);
          }
        }
      });
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô:", error);
    }
  };

  const handleEventDrop = async (arg) => {
    await getEventDrop({
      arg,
      fetchEventsFromDB,
      setEvents,

      EventService,
      Swal,
      moment,
    });
  };

  const handleEventResize = async (arg) => {
    await getEventResize({
      arg,
      fetchEventsFromDB,
      setEvents,
      EventService,
      moment,
    });
  };

  const calendarRef = useRef(null);

  const options = {
    // default is `save`
    method: "save",
    // default is Resolution.MEDIUM = 3, which should be enough, higher values
    // increases the image quality but also the size of the PDF, so be careful
    // using values higher than 10 when having multiple pages generated, it
    // might cause the page to crash or hang.
    resolution: Resolution.HIGH,
    page: {
      // margin is in MM, default is Margin.NONE = 0
      margin: Margin.SMALL,
      // default is 'A4'
      format: "a4",
      // default is 'portrait'
      orientation: "portrait",
    },
    canvas: {
      // default is 'image/jpeg' for better size performance
      mimeType: "image/png",
      qualityRatio: 1,
    },
    // Customize any value passed to the jsPDF instance and html2canvas
    // function. You probably will not need this and things can break,
    // so use with caution.
    overrides: {
      // see https://artskydj.github.io/jsPDF/docs/jsPDF.html for more options
      pdf: {
        compress: true,
      },
      // see https://html2canvas.hertzen.com/configuration for more options
      canvas: {
        useCORS: true,
      },
    },
  };

  const generatePdf = async () => {
    setLoading(true);

    try {
      const getTargetElement = () => document.getElementById("content-id");

      await generatePDF(getTargetElement, options);
      setLoading(false);
    } catch (error) {
      console.log(error);
    }
  };

  const [currentPage, setCurrentPage] = useState(1);
  const [eventsPerPage, setEventsPerPage] = useState(8); // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô event ‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
  useEffect(() => {
    const updateEventsPerPage = () => {
      if (window.innerWidth < 768) {
        setEventsPerPage(5); // ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å
      } else {
        setEventsPerPage(8); // ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà
      }
    };

    updateEventsPerPage(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    window.addEventListener("resize", updateEventsPerPage); // ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î

    return () => window.removeEventListener("resize", updateEventsPerPage); // ‡∏•‡∏ö event listener ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å unmount
  }, []);

  const sortedEvents = [...eventReceive].sort((a, b) => {
    const dateA = a.createdAt
      ? moment(a.createdAt)
      : a._id
      ? moment(a._id?.toString().substring(0, 8), "hex")
      : moment(0);

    const dateB = b.createdAt
      ? moment(b.createdAt)
      : b._id
      ? moment(b._id?.toString().substring(0, 8), "hex")
      : moment(0);

    return dateB.diff(dateA); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤
  });

  // ‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
  const filteredEvents = sortedEvents.filter((event) =>
    event.title.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Pagination ‡∏à‡∏≤‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
  const totalPages = Math.ceil(filteredEvents.length / eventsPerPage);
  const startIndex = (currentPage - 1) * eventsPerPage;
  const endIndex = startIndex + eventsPerPage;
  const paginatedEvents = filteredEvents.slice(startIndex, endIndex);

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô totalPages ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  useEffect(() => {
    if (currentPage > totalPages && totalPages > 0) {
      setCurrentPage(totalPages);
    }
  }, [filteredEvents, totalPages, currentPage]);

  const handleHighlightWeekends = () => {
    setTimeout(() => {
      document.querySelectorAll(".fc-daygrid-day").forEach((cell) => {
        const dateStr = cell.getAttribute("data-date"); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å attribute
        const date = moment(dateStr);
        const currentMonth = moment(
          calendarRef.current.getApi().getDate()
        ).month(); // ‡∏î‡∏∂‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á
        const isSaturday = date.isoWeekday() === 6;
        const isSunday = date.isoWeekday() === 7;
        const isSameMonth = date.month() === currentMonth; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏∏‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô
        cell.style.backgroundColor = "";

        // ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        if ((isSaturday || isSunday) && isSameMonth) {
          cell.style.backgroundColor = "#FFFFF4"; // ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏≠‡πà‡∏≠‡∏ô
        }
      });
    }, 0); // ‡πÉ‡∏ä‡πâ setTimeout(0) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å FullCalendar render ‡πÄ‡∏™‡∏£‡πá‡∏à
  };

  const filteredCalendarEvents = events.filter((event) => {
    const keyword = searchTerm.toLowerCase();
    return (
      event.title?.toLowerCase().includes(keyword) ||
      event.extendedProps?.site?.toLowerCase().includes(keyword) ||
      event.extendedProps?.company?.toLowerCase().includes(keyword) ||
      event.extendedProps?.system?.toLowerCase().includes(keyword) ||
      event.extendedProps?.time?.toString().includes(keyword)
    );
  });

  const statusLegend = [
    // { label: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", color: "#d33", icon: faTimesCircle },
    { label: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", color: "#888888", icon: faHourglassHalf },
    { label: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß", color: "#0c49ac", icon: faCheck },
    { label: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", color: "#a1b50b", icon: faClockRotateLeft },
    // { label: "‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß", color: "#f39c12", icon: faFileSignature },
    // { label: "‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô", color: "#9b59b6", icon: faFileInvoiceDollar },
    { label: "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", color: "#18b007", icon: faCheckDouble },
  ];

  return (
    <div>
      <Row className="flex-wrap mb-3 d-flex justify-content-center justify-content-md-between">
        <Col className="col-12 col-md-5 col-lg">
          <button className="btn btn-sm btn-danger" onClick={generatePdf}>
            <FontAwesomeIcon icon={faFilePdf} /> ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF
          </button>
          <CSVLink
            data={
              events
                ? Object.values(events)
                    .sort((a, b) => new Date(a.start) - new Date(b.start))
                    .map((event) => ({
                      ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: moment(event.start).format("YYYY-MM-DD"),
                      ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: event.end
                        ? moment(event.end).format("YYYY-MM-DD")
                        : moment(event.start).format("YYYY-MM-DD"),
                      ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: event.company ?? "",
                      ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á: event.site ?? "",
                      ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: event.title ?? "",
                      ‡∏£‡∏∞‡∏ö‡∏ö: event.system ?? "",
                      ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà: event.extendedProps?.time
                        ? `'${event.extendedProps.time}`
                        : "",
                      ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô: event.extendedProps?.team ?? "",
                    }))
                : []
            }
            filename="events.csv"
          >
            <button className="btn btn-sm btn-success mx-1 m-2">
              <FontAwesomeIcon icon={faFileExcel} /> ‡∏™‡∏£‡πâ‡∏≤‡∏á Excel
            </button>
          </CSVLink>
        </Col>
      </Row>

      <div className="mb-3">
        <input
          type="search"
          className="form-control"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ ‡∏£‡∏∞‡∏ö‡∏ö..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>
      <div id="content-id" style={{ flex: 1, width: "100%" }}>
        <FullCalendar
          ref={calendarRef}
          locales={[thLocale]} // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
          locale="th" // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
          plugins={[
            dayGridPlugin,
            interactionPlugin,
            timeGridPlugin,
            momentTimezonePlugin,
            listPlugin,
          ]}
          initialView="dayGridMonth"
          editable={isAdmin}
          selectable={isAdmin}
          droppable={isAdmin}
          dateClick={isAdmin ? handleAddEvent : null}
          eventClick={isAdmin ? handleEditEvent : null}
          eventDrop={isAdmin ? handleEventDrop : null}
          eventResize={isAdmin ? handleEventResize : null}
          events={filteredCalendarEvents}
          allDaySlot={true}
          nowIndicator={true}
          selectMirror={true}
          weekends={true}
          contentHeight="auto"
          showNonCurrentDates={false} // ‚úÖ ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á
          firstDay={0} // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
          eventContent={(arg) => {
            const { title, extendedProps } = arg.event;
            const {
              system = "",
              time = "",
              site = "",
              team = "",
            } = extendedProps;

            const siteDisplay = site ? ` - ${site}` : "";
            const timeDisplay = time ? ` ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${time}` : "";
            const teamDisplay = team ? ` - ( ‡∏ó‡∏µ‡∏° ${team} )` : "";
            return {
              html: `
              [ ${title} ]
              ${system} ${timeDisplay}
              ${siteDisplay} ${teamDisplay}
            `,
            };
          }}
          headerToolbar={{
            left: "prev,next",
            center: "title",
            right: "today",
          }}
          footerToolbar={{
            right: "dayGridMonth,timeGridWeek,listWeek",
            // right: "dayGridMonth,timeGridWeek,timeGridDay,listWeek",
          }}
          customButtons={{
            prev: {
              text: "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö",
              click: () => calendarRef.current.getApi().prev(),
            },
            next: {
              text: "‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
              click: () => calendarRef.current.getApi().next(),
            },
            today: {
              text: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
              click: () => calendarRef.current.getApi().today(),
            },
          }}
          datesSet={handleHighlightWeekends} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏µ‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
          buttonText={{
            today: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
            month: "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
            week: "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
            day: "‡∏ß‡∏±‡∏ô",
            list: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
          }}
          views={{
            listWeek: { dayMaxEventRows: window.innerWidth >= 576 ? 7 : 5 },
            dayGridMonth: { dayMaxEventRows: window.innerWidth >= 576 ? 7 : 5 },
            timeGridWeek: { dayMaxEventRows: window.innerWidth >= 576 ? 7 : 5 },
            timeGridDay: { dayMaxEventRows: window.innerWidth >= 576 ? 7 : 5 },
          }}
          eventDidMount={(info) => {
            const status = info.event.extendedProps.status;
            const icon = getStatusIcon(status);
            const statusDescription = {
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
              ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
              ‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß: "‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß",
              ‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: "‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô",
              ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß: "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            };

            if (icon) {
              // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
              const isSmallScreen = window.innerWidth < 768; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å

              // ‚úÖ ‡∏î‡∏∂‡∏á‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á Event
              const backgroundColor = info.event.backgroundColor || "#ffffff"; // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
              const textColor = info.event.textColor || "#000000"; // ‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠

              // ‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
              const iconSize = isSmallScreen ? "10px" : "15px"; // üìå ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏≤‡∏î 10px, ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏≤‡∏î 16px
              const padding = isSmallScreen
                ? "10px 0px 2px 2px" // üìå ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å
                : "10px 0px 3px 3px"; // üìå ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà

              // üîπ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á container ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á event (‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô)
              info.el.style.position = "relative"; // ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏ä‡πâ absolute ‡πÑ‡∏î‡πâ
              info.el.style.display = "flex";
              info.el.style.alignItems = "center"; // ‚úÖ ‡∏à‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
              info.el.style.padding = `${padding}`; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Padding ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤‡πÉ‡∏´‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠

              // üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á div ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
              const iconContainer = document.createElement("div");
              iconContainer.style.position = "absolute";
              iconContainer.style.right = "2px"; // ‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤
              iconContainer.style.top = "1px"; // ‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô
              iconContainer.style.width = iconSize; // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
              iconContainer.style.height = iconSize;
              iconContainer.style.display = "flex";
              iconContainer.style.alignItems = "center";
              iconContainer.style.justifyContent = "center";
              iconContainer.style.backgroundColor = `${backgroundColor}`; // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á event
              iconContainer.style.cursor = "pointer"; // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô pointer ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô tooltip
              iconContainer.style.zIndex = "10"; // ‚úÖ ‡πÉ‡∏´‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤
              iconContainer.title = statusDescription[status] || "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"; // ‚úÖ Tooltip

              // üîπ ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏ô FullCalendar
              ReactDOM.createRoot(iconContainer).render(
                <FontAwesomeIcon
                  icon={icon}
                  style={{
                    fontSize: isSmallScreen ? "8px" : "12px", // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î icon ‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
                    color: textColor, // ‚úÖ ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
                  }}
                />
              );

              // üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà event container
              info.el.appendChild(iconContainer);
            }
          }}
          dayCellDidMount={(info) => {
            const date = moment(info.date); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô moment object
            const currentMonth = moment(info.view.currentStart).month(); // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô
            const isSaturday = date.isoWeekday() === 6; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå
            const isSunday = date.isoWeekday() === 7; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå
            const isSameMonth = date.month() === currentMonth; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

            // ‚úÖ ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            if ((isSaturday || isSunday) && isSameMonth) {
              info.el.style.backgroundColor = "#FFFFF4"; // ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏≠‡πà‡∏≠‡∏ô
            }
          }}
        />
        <style>
          {`
          @media (max-width: 768px) {
            .fc-header-toolbar {
              display: flex;
              flex-direction: column;
              width: 100%;
              gap: 8px;
            }
            .fc-toolbar-chunk {
              display: flex;
              justify-content: space-between;
              width: 100%;
        font-size: 12px !important; /* ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */
            }
            .fc-toolbar-title {
              flex: 1;
              text-align: center;
              font-size: 1.5em;
              margin: 0;
            }
            .fc-button {
              flex: 1;
              min-width: 0;
              margin: 2px;
            }
            .fc-button-group {
              display: flex;
              width: 100%;
            }
            .fc-button-group .fc-button {
              flex: 1;
            }
            .fc-footer-toolbar {
              display: flex;
              justify-content: center;
              width: 100%;
              margin-top: 5px;
            }
          }
.legend-item {
      display: flex;
      align-items: center;
      gap: 6px;
      font-size: 14px;
    }

    .legend-color {
      width: 14px;
      height: 14px;
      border-radius: 3px;
    }

    @media (max-width: 768px) {
      .color-legend-container {
        justify-content: left; /* ‚úÖ ‡∏à‡∏±‡∏î‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å */
      }

      .color-legend {
        justify-content: left;
        flex-direction: column;
        font-size: 12px;
        gap: 10px;
      }
    }
        `}
        </style>
        {/* ‚úÖ ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô (Legend) */}
        <div
          className="color-legend-container"
          style={{
            display: "flex",
            justifyContent: "left",
            alignItems: "flex-start",
            flexWrap: "wrap",
            padding: "8px",
            borderRadius: "8px",
            width: "100%",
          }}
        >
          <div
            className="color-legend"
            style={{ display: "flex", gap: "15px", flexWrap: "wrap" }}
          >
            {statusLegend.map((status) => (
              <div
                key={status.label}
                className="legend-item"
                style={{ display: "flex", alignItems: "center", gap: "8px" }}
              >
                <FontAwesomeIcon
                  icon={status.icon}
                  style={{ color: status.color }}
                />
                <span>{status.label}</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {loading && (
        <div className="loading-overlay">
          <ThreeDots type="ThreeDots" color="#007bff" height={50} width={50} />
        </div>
      )}
    </div>
  );
}

export default EventCalendar;
